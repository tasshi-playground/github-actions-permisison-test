name: release
on:
  push:

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
    steps:
      - id: release_tag
        run: |
          release_url=$(gh release create "v-${GITHUB_SHA}" --draft)
          release_tag=$(echo $release_url | sed -r "s|^${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/(.*)$|\1|")
          echo "release_tag=${release_tag}" >> "$GITHUB_OUTPUT"
          sleep 1

  rename:
    name: Rename release title
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: gh release edit ${{ needs.release.outputs.release_tag }} --title "Release v-${GITHUB_SHA}"

  upload:
    name: Upload executables
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - run: echo "hoge" > attachment.txt
      - name: Upload executables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release.outputs.release_tag }} attachment.txt

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [release, rename, upload]
    env:
      GH_REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - run: gh release edit ${{ needs.release.outputs.release_tag }} --draft=false
